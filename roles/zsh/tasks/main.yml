---
- name: Installing zsh
  apt:
    name: zsh
    state: latest
  register: installation
  become: yes

- name: Cloning  oh-my-zsh
  git:
    repo=https://github.com/robbyrussell/oh-my-zsh
    dest=~/.oh-my-zsh
  when: installation is success
  register: cloning
  become: no

- name: Check that the ~/.zshrc exists
  stat:
    path: ~/.zshrc
  register: stat_result

- name: Check whether .zshrc is original
  command: awk /ZSH_THEME=\"robbyrussell\"/ ~/.zshrc
  register: checkoriginalzshrc
  changed_when: False
  when: stat_result.stat.exists == True

- name: Creating new ~/.zshrc
  copy:
    content: ""
    dest: ~/.zshrc
    force: yes
  when: stat_result.stat.exists == False or checkoriginalzshrc.stdout is match("ZSH_THEME=\"robbyrussell\"")
  become: no

- name: Basic configuration
  blockinfile:
    path: ~/.zshrc
    marker: "# {mark} Basic Config "
    content: |
      export ZSH=~/.oh-my-zsh
      ZSH_THEME="ys"
      plugins=(git)
      source $ZSH/oh-my-zsh.sh

- name: Alias configuration
  blockinfile:
    path: ~/.zshrc
    marker: "# {mark} Aliases "
    content: |
      loc() { find "$*" -type f -name '*'| xargs wc -l ; }
      cheat() { curl cheat.sh/$1 ; }
      df_min() { df -h | grep -v snap }
      rm_docker_con() { docker rm -f $(docker ps -a -q) }

- name: Check whether zsh is already standard shell
  shell: |
    grep {{ ansible_user_id }} /etc/passwd | grep -oh 'zsh\|bash'
  register: existing_shell
  become: no
  changed_when: False

- name: Change Shell to Zsh
  shell: |
    usermod --shell /bin/zsh {{ ansible_user_id }}
  become: yes
  when: existing_shell.stdout is not match("zsh")
